/**
 * Openmoney API
 * Openmoney API
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessTokenRequest', 'model/AccountsGet', 'model/AccountsList', 'model/AccountsRequest', 'model/AccountsResponse', 'model/AesEncryption', 'model/ApplicationRequest', 'model/ApplicationResponse', 'model/CreateResponse', 'model/CurrenciesGet', 'model/CurrenciesList', 'model/CurrenciesRequest', 'model/CurrenciesResponse', 'model/DeleteResponse', 'model/EncryptedJournals', 'model/ErrorModel', 'model/ForgotRequest', 'model/ForgotResponse', 'model/GetResponse', 'model/JournalsList', 'model/JournalsRequest', 'model/JournalsResponse', 'model/Modification', 'model/NamespacesGet', 'model/NamespacesList', 'model/NamespacesRequest', 'model/NamespacesResponse', 'model/OauthAuthorizeRequest', 'model/RegisterRequest', 'model/RegisterResponse', 'model/ResetRequest', 'model/ResetResponse', 'model/StewardsGet', 'model/StewardsList', 'model/StewardsRequest', 'model/StewardsResponse', 'model/TokenResponse', 'api/AccountsApi', 'api/AuthApi', 'api/CurrenciesApi', 'api/JournalsApi', 'api/NamespacesApi', 'api/StewardsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessTokenRequest'), require('./model/AccountsGet'), require('./model/AccountsList'), require('./model/AccountsRequest'), require('./model/AccountsResponse'), require('./model/AesEncryption'), require('./model/ApplicationRequest'), require('./model/ApplicationResponse'), require('./model/CreateResponse'), require('./model/CurrenciesGet'), require('./model/CurrenciesList'), require('./model/CurrenciesRequest'), require('./model/CurrenciesResponse'), require('./model/DeleteResponse'), require('./model/EncryptedJournals'), require('./model/ErrorModel'), require('./model/ForgotRequest'), require('./model/ForgotResponse'), require('./model/GetResponse'), require('./model/JournalsList'), require('./model/JournalsRequest'), require('./model/JournalsResponse'), require('./model/Modification'), require('./model/NamespacesGet'), require('./model/NamespacesList'), require('./model/NamespacesRequest'), require('./model/NamespacesResponse'), require('./model/OauthAuthorizeRequest'), require('./model/RegisterRequest'), require('./model/RegisterResponse'), require('./model/ResetRequest'), require('./model/ResetResponse'), require('./model/StewardsGet'), require('./model/StewardsList'), require('./model/StewardsRequest'), require('./model/StewardsResponse'), require('./model/TokenResponse'), require('./api/AccountsApi'), require('./api/AuthApi'), require('./api/CurrenciesApi'), require('./api/JournalsApi'), require('./api/NamespacesApi'), require('./api/StewardsApi'));
  }
}(function(ApiClient, AccessTokenRequest, AccountsGet, AccountsList, AccountsRequest, AccountsResponse, AesEncryption, ApplicationRequest, ApplicationResponse, CreateResponse, CurrenciesGet, CurrenciesList, CurrenciesRequest, CurrenciesResponse, DeleteResponse, EncryptedJournals, ErrorModel, ForgotRequest, ForgotResponse, GetResponse, JournalsList, JournalsRequest, JournalsResponse, Modification, NamespacesGet, NamespacesList, NamespacesRequest, NamespacesResponse, OauthAuthorizeRequest, RegisterRequest, RegisterResponse, ResetRequest, ResetResponse, StewardsGet, StewardsList, StewardsRequest, StewardsResponse, TokenResponse, AccountsApi, AuthApi, CurrenciesApi, JournalsApi, NamespacesApi, StewardsApi) {
  'use strict';

  /**
   * Openmoney_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var OpenmoneyApi = require('index'); // See note below*.
   * var xxxSvc = new OpenmoneyApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new OpenmoneyApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new OpenmoneyApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new OpenmoneyApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessTokenRequest model constructor.
     * @property {module:model/AccessTokenRequest}
     */
    AccessTokenRequest: AccessTokenRequest,
    /**
     * The AccountsGet model constructor.
     * @property {module:model/AccountsGet}
     */
    AccountsGet: AccountsGet,
    /**
     * The AccountsList model constructor.
     * @property {module:model/AccountsList}
     */
    AccountsList: AccountsList,
    /**
     * The AccountsRequest model constructor.
     * @property {module:model/AccountsRequest}
     */
    AccountsRequest: AccountsRequest,
    /**
     * The AccountsResponse model constructor.
     * @property {module:model/AccountsResponse}
     */
    AccountsResponse: AccountsResponse,
    /**
     * The AesEncryption model constructor.
     * @property {module:model/AesEncryption}
     */
    AesEncryption: AesEncryption,
    /**
     * The ApplicationRequest model constructor.
     * @property {module:model/ApplicationRequest}
     */
    ApplicationRequest: ApplicationRequest,
    /**
     * The ApplicationResponse model constructor.
     * @property {module:model/ApplicationResponse}
     */
    ApplicationResponse: ApplicationResponse,
    /**
     * The CreateResponse model constructor.
     * @property {module:model/CreateResponse}
     */
    CreateResponse: CreateResponse,
    /**
     * The CurrenciesGet model constructor.
     * @property {module:model/CurrenciesGet}
     */
    CurrenciesGet: CurrenciesGet,
    /**
     * The CurrenciesList model constructor.
     * @property {module:model/CurrenciesList}
     */
    CurrenciesList: CurrenciesList,
    /**
     * The CurrenciesRequest model constructor.
     * @property {module:model/CurrenciesRequest}
     */
    CurrenciesRequest: CurrenciesRequest,
    /**
     * The CurrenciesResponse model constructor.
     * @property {module:model/CurrenciesResponse}
     */
    CurrenciesResponse: CurrenciesResponse,
    /**
     * The DeleteResponse model constructor.
     * @property {module:model/DeleteResponse}
     */
    DeleteResponse: DeleteResponse,
    /**
     * The EncryptedJournals model constructor.
     * @property {module:model/EncryptedJournals}
     */
    EncryptedJournals: EncryptedJournals,
    /**
     * The ErrorModel model constructor.
     * @property {module:model/ErrorModel}
     */
    ErrorModel: ErrorModel,
    /**
     * The ForgotRequest model constructor.
     * @property {module:model/ForgotRequest}
     */
    ForgotRequest: ForgotRequest,
    /**
     * The ForgotResponse model constructor.
     * @property {module:model/ForgotResponse}
     */
    ForgotResponse: ForgotResponse,
    /**
     * The GetResponse model constructor.
     * @property {module:model/GetResponse}
     */
    GetResponse: GetResponse,
    /**
     * The JournalsList model constructor.
     * @property {module:model/JournalsList}
     */
    JournalsList: JournalsList,
    /**
     * The JournalsRequest model constructor.
     * @property {module:model/JournalsRequest}
     */
    JournalsRequest: JournalsRequest,
    /**
     * The JournalsResponse model constructor.
     * @property {module:model/JournalsResponse}
     */
    JournalsResponse: JournalsResponse,
    /**
     * The Modification model constructor.
     * @property {module:model/Modification}
     */
    Modification: Modification,
    /**
     * The NamespacesGet model constructor.
     * @property {module:model/NamespacesGet}
     */
    NamespacesGet: NamespacesGet,
    /**
     * The NamespacesList model constructor.
     * @property {module:model/NamespacesList}
     */
    NamespacesList: NamespacesList,
    /**
     * The NamespacesRequest model constructor.
     * @property {module:model/NamespacesRequest}
     */
    NamespacesRequest: NamespacesRequest,
    /**
     * The NamespacesResponse model constructor.
     * @property {module:model/NamespacesResponse}
     */
    NamespacesResponse: NamespacesResponse,
    /**
     * The OauthAuthorizeRequest model constructor.
     * @property {module:model/OauthAuthorizeRequest}
     */
    OauthAuthorizeRequest: OauthAuthorizeRequest,
    /**
     * The RegisterRequest model constructor.
     * @property {module:model/RegisterRequest}
     */
    RegisterRequest: RegisterRequest,
    /**
     * The RegisterResponse model constructor.
     * @property {module:model/RegisterResponse}
     */
    RegisterResponse: RegisterResponse,
    /**
     * The ResetRequest model constructor.
     * @property {module:model/ResetRequest}
     */
    ResetRequest: ResetRequest,
    /**
     * The ResetResponse model constructor.
     * @property {module:model/ResetResponse}
     */
    ResetResponse: ResetResponse,
    /**
     * The StewardsGet model constructor.
     * @property {module:model/StewardsGet}
     */
    StewardsGet: StewardsGet,
    /**
     * The StewardsList model constructor.
     * @property {module:model/StewardsList}
     */
    StewardsList: StewardsList,
    /**
     * The StewardsRequest model constructor.
     * @property {module:model/StewardsRequest}
     */
    StewardsRequest: StewardsRequest,
    /**
     * The StewardsResponse model constructor.
     * @property {module:model/StewardsResponse}
     */
    StewardsResponse: StewardsResponse,
    /**
     * The TokenResponse model constructor.
     * @property {module:model/TokenResponse}
     */
    TokenResponse: TokenResponse,
    /**
     * The AccountsApi service constructor.
     * @property {module:api/AccountsApi}
     */
    AccountsApi: AccountsApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The CurrenciesApi service constructor.
     * @property {module:api/CurrenciesApi}
     */
    CurrenciesApi: CurrenciesApi,
    /**
     * The JournalsApi service constructor.
     * @property {module:api/JournalsApi}
     */
    JournalsApi: JournalsApi,
    /**
     * The NamespacesApi service constructor.
     * @property {module:api/NamespacesApi}
     */
    NamespacesApi: NamespacesApi,
    /**
     * The StewardsApi service constructor.
     * @property {module:api/StewardsApi}
     */
    StewardsApi: StewardsApi
  };

  return exports;
}));
